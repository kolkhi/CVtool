//
// "$Id: main_panel.fl 01 2018-03-29 18:21:11Z gsergia $"
//
// FLUID template support for the Fast Light Tool Kit (FLTK).
//
// Copyright 1998-2016 by Bill Spitzak and others.
//
// This library is free software. Distribution and use rights are outlined in
// the file "COPYING" which should have been included with this file.  If this
// file is missing or damaged, see the license at:
//
//     http://www.fltk.org/COPYING.php
//
// Please report all bugs and problems on the following page:
//
//     http://www.fltk.org/str.php
//

// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include <main_panel.h>
#include <resources.h>
#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <FL/filename.H>
#include <FL/fl_ask.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Preferences.H>
#include <FL/Fl_Native_File_Chooser.H>
#include <FL/Fl_Shared_Image.H>
//#include <FL/Fl_File_Icon.H>
#if defined(WIN32) && !defined(__CYGWIN__)
#include <io.h>
#else
#include <unistd.h>
#endif // WIN32 && !__CYGWIN__
extern Fl_Preferences fluid_prefs;

using namespace cvtool;

MainWnd *main_panel=(MainWnd *)0;

static void cb_main_panel(MainWnd*, void*) 
{
    
}

static Fl_Button *loadVideo=(Fl_Button *)0;
static Fl_Button *firstFrameBtn=(Fl_Button *)0;
static Fl_Button *prevFrameBtn=(Fl_Button *)0;
static Fl_Button *playBtn=(Fl_Button *)0;
static Fl_Button *stopBtn=(Fl_Button *)0;
static Fl_Button *nextFrameBtn=(Fl_Button *)0;
static Fl_Button *lastFrameBtn=(Fl_Button *)0;
static Fl_Button *pauseBtn=(Fl_Button *)0;
static Fl_Slider *playTrackbar=(Fl_Slider *)0;
static Fl_Input* fileNameEdit=(Fl_Input *)0;


static Fl_Image *image_first() {
  static Fl_Image *image = new Fl_RGB_Image(idata_first, 24, 24, 4, 0);
  return image;
}

static Fl_Image *image_prev() {
  static Fl_Image *image = new Fl_RGB_Image(idata_prev, 32, 32, 4, 0);
  return image;
}

static Fl_Image *image_play() {
  static Fl_Image *image = new Fl_RGB_Image(idata_play, 24, 24, 4, 0);
  return image;
}

static Fl_Image *image_stop() {
  static Fl_Image *image = new Fl_RGB_Image(idata_stop, 24, 24, 4, 0);
  return image;
}

static Fl_Image *image_next() {
  static Fl_Image *image = new Fl_RGB_Image(idata_next, 32, 32, 4, 0);
  return image;
}

static Fl_Image *image_last() {
  static Fl_Image *image = new Fl_RGB_Image(idata_last, 24, 24, 4, 0);
  return image;
}

static Fl_Image *image_pause() {
  static Fl_Image *image = new Fl_RGB_Image(idata_pause, 24, 24, 4, 0);
  return image;
}

MainWnd::MainWnd(int X, int Y, int W, int H, const char* l) :
  Fl_Double_Window(X, Y, W, H, l)
{

}

/*static*/ void MainWnd::PickFile_CB(Fl_Widget*, void*) 
{
  // Create native chooser
  Fl_Native_File_Chooser native;
  native.title("Choose video file");
  native.type(Fl_Native_File_Chooser::BROWSE_FILE);
  native.filter(fileFilter);
  native.preset_file(fileNameEdit->value());
  // Show native chooser
  switch ( native.show() ) 
  {
    case -1: 
      fprintf(stderr, "ERROR: %s\n", native.errmsg()); 
      break;	// ERROR
    case  1: 
      fprintf(stderr, "*** CANCEL\n"); 
      fl_beep(); 
      break;		// CANCEL
    default: 								// PICKED FILE
      if ( native.filename() ) 
      {
          fileNameEdit->value(native.filename());
      } 
      else 
      {
	        fileNameEdit->value("");
      }
      break;
  }
}

MainWnd* MainWnd::make_main_panel() 
{  
  { 
    main_panel = new MainWnd(0, 0, 540, 190, "CVTool");
    main_panel->box(FL_FLAT_BOX);
    main_panel->color(FL_BACKGROUND_COLOR);
    main_panel->selection_color(FL_BACKGROUND_COLOR);
    main_panel->labeltype(FL_NO_LABEL);
    main_panel->labelfont(0);
    main_panel->labelsize(14);
    main_panel->labelcolor(FL_FOREGROUND_COLOR);
    //main_panel->callback((Fl_Callback*)cb_main_panel);
    main_panel->align(Fl_Align(FL_ALIGN_TOP));
    main_panel->when(FL_WHEN_RELEASE);
    { 
      fileNameEdit = new Fl_Input(25, 25, 465, 25, "Video file");
      //fileNameEdit->en(0);
      fileNameEdit->tooltip("Video file path");
      fileNameEdit->align(Fl_Align(FL_ALIGN_TOP_LEFT));
    } // Fl_Input* fileNameEdit
    { 
      loadVideo = new Fl_Button(490, 25, 25, 25, "...");
      loadVideo->tooltip("Load video file");
      loadVideo->down_box(FL_DOWN_BOX);
      loadVideo->callback(MainWnd::PickFile_CB);

      //Fl_File_Icon  *icon = Fl_File_Icon::find(".", Fl_File_Icon::DIRECTORY);
      //icon->label(loadVideo);

    } // Fl_Button* loadVideo
    { 
      { 
        { 
          firstFrameBtn = new Fl_Button(25, 125, 40, 40);
          firstFrameBtn->image( image_first() );
          firstFrameBtn->align(Fl_Align(512));
        } // Fl_Button* firstFrameBtn
        { 
          prevFrameBtn = new Fl_Button(80, 125, 40, 40);
          prevFrameBtn->image( image_prev() );
          prevFrameBtn->align(Fl_Align(512));
        } // Fl_Button* prevFrameBtn
        { 
          playBtn = new Fl_Button(135, 125, 40, 40);
          playBtn->image( image_play() );
          playBtn->align(Fl_Align(512));
        } // Fl_Button* playBtn
        { 
          stopBtn = new Fl_Button(190, 125, 40, 40);
          stopBtn->image( image_stop() );
          stopBtn->align(Fl_Align(512));
        } // Fl_Button* stopBtn
        { 
          nextFrameBtn = new Fl_Button(245, 125, 40, 40);
          nextFrameBtn->image( image_next() );
          nextFrameBtn->align(Fl_Align(512));
        } // Fl_Button*nextFrameBtn
        { 
          lastFrameBtn = new Fl_Button(300, 125, 40, 40);
          lastFrameBtn->image( image_last() );
          lastFrameBtn->align(Fl_Align(512));
        } // Fl_Button* lastFrameBtn
      } // Fl_Group* o
      { 
        pauseBtn = new Fl_Button(135, 125, 40, 40);
        pauseBtn->image( image_pause() );
        pauseBtn->hide();
      } // Fl_Button* pauseBtn
    } // Fl_Pack* o

    { 
      playTrackbar = new Fl_Slider(25, 75, 490, 27);
      playTrackbar->type(5);
      playTrackbar->box(FL_FLAT_BOX);
      playTrackbar->maximum(100);
      playTrackbar->step(1);
    } // Fl_Slider* playTrackbar
    
    main_panel->set_non_modal();
    main_panel->size_range(540, 190, 540, 190);
    main_panel->end();
  } // MainWnd* main_panel

  return main_panel;
}

//
// End of "$Id:  main_panel.fl 01 2018-03-29 18:21:11Z gsergia $".
//
